#import required modules
import imghdr
from tkinter import *
import tkinter as tk
from tkinter.filedialog import askopenfile
import os
from PIL import Image,ImageTk
import face_recognition
import cv2
import numpy as np
from csv import reader, writer

filepath=""
found=False

def upload_search():
    uw = tk.Tk()
    uw.geometry("700x350")
    def open_file():
        global filepath
        file = tk.filedialog.askopenfile(mode='r', filetypes=[('All Files', '*.*')])
        if file:
            filepath = str(os.path.abspath(file.name))
            #we can skip these steps
            #need to add a label that shows the image saved in 'filepath'
            #need to have a confirmation button that redirects to the searching page
            img_search()
            uw.destroy()
    
    l2=tk.Label(uw, text="Upload picture", font=('Georgia 13'))
    l2.pack(pady=10)
    tk.Button(uw, text="Browse", command=open_file).pack(pady=20)
    uw.mainloop()

def camera_search():
    global filepath
    camera = cv2.VideoCapture(0)
    cv2.namedWindow("Capture an image")

    while True:
        ret, frame = camera.read()
        if not ret:
            print("Try Again")
            break
        cv2.imshow("Capture an image", frame)

        key = cv2.waitKey(1)
        if key%256 == 27:
            # ESC pressed, closes the window--dont destroy previous window, overwrite it
            break
        elif key%256 == 32:
            # SPACE pressed
            filepath = "C:\\Users\\ayush\\Desktop\\CS project\\temporary_image\\imgcampture.jpg"
            cv2.imwrite(filepath, frame)
            break

    camera.release()
    cv2.destroyAllWindows()


#image search
def img_search():
    global filepath
    uimg = face_recognition.load_image_file(filepath)
    u_encoding = face_recognition.face_encodings(uimg)[0]
    #open database
    f=open("policedatabase.csv","r")
    rr=reader(f)
    #need to exclude headers while checking
    global found
    MPIN=0
    for i in rr:
        if i[0]=='MPIN':
            continue
        else:
            path=i[6]
            cimg = face_recognition.load_image_file(path)
            c_encoding = face_recognition.face_encodings(cimg)[0]
            result = face_recognition.compare_faces([c_encoding], u_encoding)
            #output of result is [boolean]
            if True in result:
                found=True
                MPIN=i[0]
                print(i)
                #add details of i(MPIN stored in variable), search up based on MPIN and display as separate window
                break
    f.close()




#if found:
    #add function linking to next window where details are shown
#else:
    #try again popup box

upload_search()
print(filepath)

